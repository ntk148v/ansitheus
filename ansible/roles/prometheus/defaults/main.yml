---
prometheus_version: "3.1.0"
prometheus_docker_namespace: "{{ docker_namespace if docker_namespace else 'prom' }}"
prometheus_port: 9090
prometheus_container_name: "prometheus"
prometheus_config_dir: "{{ ansitheus_config_dir }}/prometheus"
prometheus_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ prometheus_docker_namespace }}/prometheus:v{{ prometheus_version }}"
prometheus_volume: "prometheus_data"
prometheus_docker_log_driver: "{{ docker_log_driver }}"
prometheus_docker_log_opts: "{{ docker_log_opts }}"
# Docker resource limit
prometheus_docker_memory_limit: "{{ docker_memory_limit }}"
prometheus_docker_memory_swap_limit: "{{ docker_memory_swap_limit }}"
prometheus_docker_cpus_limit: "{{ docker_cpus_limit }}"

prometheus_web_listen_address: "{{ api_interface_address }}:{{ prometheus_port }}"
prometheus_web_external_url: "http://{{ prometheus_vip_address }}:{{ prometheus_port }}"
promtool_docker_namespace: "{{ docker_namespace if docker_namespace else 'kiennt26' }}"
promtool_version: "v3.1.0-v0.28.0"
promtool_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ promtool_docker_namespace }}/pramtool:{{ promtool_version }}"

# Prometheus arguments
# --------------------
prometheus_storage_retention: "30d"
# Available since Prometheus 2.7.0
# [EXPERIMENTAL] Maximum number of bytes that can be stored for blocks. Units
# supported: KB, MB, GB, TB, PB.
prometheus_storage_retention_size: "0"
# The Agent mode optimizes Prometheus for the remote write use case: https://prometheus.io/blog/2021/11/16/agent/
prometheus_agent_mode: false
prometheus_config_flags_extra: {}
# prometheus_config_flags_extra:
#   enable-feature:
#     - promql-at-modifier
#     - promql-negative-offset
#   web.enable-lifecycle:
# See https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md
prometheus_web_config:
  tls_server_config: {}
  http_server_config: {}
  basic_auth_users: {}

# Prometheus customized arguments
# -------------------------------
prometheus_enable_target_sharding: false
# Job names to ignore sharding
prometheus_sharding_ignorances: []
# prometheus_sharding_ignorances:
#   - prometheus

# Configuration file options
# --------------------------
prometheus_global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
prometheus_remote_write: []
# prometheus_remote_write:
#   - url: https://dev.kausal.co/prom/push
#     basic_auth:
#       password: FOO

prometheus_remote_read: []
# prometheus_remote_read:
#   - url: https://prometheus.demo.do.prometheus.io:9201/read
#     basic_auth:
#       password: FOO

prometheus_external_labels:
  environment: "{{ ansible_fqdn | default(ansible_host) | default(inventory_hostname) }}"

# Prometheus environment variables
# -------------------------------
prometheus_env: "{{ docker_container_env }}"

# Container constructor
# ---------------------
prometheus_services:
  prometheus:
    container_name: "{{ prometheus_container_name }}"
    group: prometheus
    enabled: "{{ enable_prometheus }}"
    image: "{{ prometheus_image }}"
    state: "started"
    port: "{{ prometheus_port }}"
    volumes:
      - "{{ prometheus_config_dir }}:/etc/prometheus"
      - "{{ prometheus_volume }}:/prometheus"
    restart_policy: "unless-stopped"
    privileged: "no"
    network_mode: "host"
    command: >
      {% if not prometheus_agent_mode %}
        --storage.tsdb.path=/prometheus
      {% if prometheus_version is version('2.7.0', '>=') %}
        --storage.tsdb.retention.time={{ prometheus_storage_retention }}
        --storage.tsdb.retention.size={{ prometheus_storage_retention_size }}
      {% else %}
        --storage.tsdb.retention={{ prometheus_storage_retention }}
      {% endif %}
      {% else %}
        --enable-feature=agent
        --storage.agent.path=/prometheus
      {% endif %}
        --config.file=/etc/prometheus/prometheus.yml
      {% if prometheus_web_config is defined and prometheus_version is version('2.24.0', '>=') %}
        --web.config.file=/etc/prometheus/web.yml
      {% endif %}
        --web.enable-lifecycle
        --web.console.libraries=/etc/prometheus/console_libraries
        --web.console.templates=/etc/prometheus/consoles
        --web.listen-address={{ prometheus_web_listen_address }}
        --web.external-url={{ prometheus_web_external_url }}
      {% for flag, flag_value in prometheus_config_flags_extra.items() %}
      {% if not flag_value %}
      {% if not flag == "web.enable-lifecycle" %}
        --{{ flag }}
      {% endif %}
      {% elif flag_value is string %}
        --{{ flag }}={{ flag_value }}
      {% elif flag_value is sequence %}
      {% for flag_value_item in flag_value %}
        --{{ flag }}={{ flag_value_item }}
      {% endfor %}
      {% endif %}
      {% endfor %}
    log_driver: "{{ prometheus_docker_log_driver }}"
    log_options: "{{ prometheus_docker_log_opts }}"
    memory: "{{ prometheus_docker_memory_limit }}"
    memory_swap: "{{ prometheus_docker_memory_swap_limit }}"
    cpus: "{{ prometheus_docker_cpus_limit }}"
    env: "{{ prometheus_env }}"
